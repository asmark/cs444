EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id TYPE_CHECKING
Comma ,
Id INVALID_INSTANCEOF
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id TYPE_CHECKING
Comma ,
Id INVALID_INSTANCEOF
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
Public public
Class class
Id Je_1_InstanceOf_Primitive
LeftBrace {
TraditionalCommentPrefix /*
Id Parser
Plus +
Id Weeder
Assign =
Greater >
InstanceOf instanceof
Id is
Id not
Id allowed
Id on
Id primitive
Id types
TraditionalCommentPostfix */
Public public
Id Je_1_InstanceOf_Primitive
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
Id a
Assign =
DecimalInteger 0
SemiColon ;
If if
LeftParen (
Id a
InstanceOf instanceof
Int int
RightParen )
Return return
DecimalInteger 42
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
