EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id A
Id PType
Id node
Id in
Id an
Extends extends
Id clause
Comma ,
Implements implements
Id clause
Comma ,
Throws throws
Multiply *
Id clause
Id or
Class class
Id instantiation
Id expression
Id must
Id be
Id an
Id ANamedType
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_Throws_SimpleType
LeftBrace {
Public public
Id Je_1_Throws_SimpleType
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Void void
Id foo
LeftParen (
RightParen )
Throws throws
Int int
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
