EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 1
RightParen )
Id No
Id multidimensional
Id array
Id creation
Id expressions
Id allowed
Dot .
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 2
RightParen )
Id Multidimensional
Id array
Id creation
Id expression
Id is
Id not
Id an
Multiply *
Id lvalue
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_MultiArrayCreation_Assign_2
LeftBrace {
Public public
Id Je_1_MultiArrayCreation_Assign_2
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
New new
Int int
LeftBracket [
DecimalInteger 5
RightBracket ]
LeftBracket [
DecimalInteger 2
RightBracket ]
Assign =
DecimalInteger 42
SemiColon ;
Return return
DecimalInteger 120
SemiColon ;
RightBrace }
RightBrace }
