EolCommentPrefix //
Id PARSER_WEEDER
Comma ,
EolCommentPrefix //
Id JOOS1
Colon :
Id JOOS1_EXPLICIT_SUPER_CALL
Comma ,
Id SUPER_CALL_NOT_FIRST_STATEMENT
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id SUPER_CALL_NOT_FIRST_STATEMENT
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 1
RightParen )
Id No
Id explicit
Super super
Id or
This this
Id statements
Id allowed
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 2
RightParen )
Id A
Super super
Id or
This this
Id statement
Id must
Id be
Id the
Id first
Id statement
Id in
Multiply *
Id a
Id constructor
Id body
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_SuperThis_SuperInBlock
LeftBrace {
Public public
Id Je_1_SuperThis_SuperInBlock
LeftParen (
RightParen )
LeftBrace {
LeftBrace {
Super super
LeftParen (
RightParen )
SemiColon ;
RightBrace }
RightBrace }
Public public
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
