EolCommentPrefix //
Id PARSER_WEEDER
Comma ,
Id CODE_GENERATION
Public public
Class class
Id J1_01
LeftBrace {
Public public
Id J1_01
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
Id r1
Assign =
Id J1_01
Dot .
Id m0
LeftParen (
DecimalInteger 0
RightParen )
SemiColon ;
Int int
Id r2
Assign =
Id J1_01
Dot .
Id m0
LeftParen (
DecimalInteger 1
RightParen )
SemiColon ;
Int int
Id r3
Assign =
Id J1_01
Dot .
Id m0
LeftParen (
DecimalInteger 100
RightParen )
SemiColon ;
Int int
Id r4
Assign =
Id J1_01
Dot .
Id m1
LeftParen (
DecimalInteger 0
RightParen )
SemiColon ;
Int int
Id r5
Assign =
Id J1_01
Dot .
Id m1
LeftParen (
DecimalInteger 1
RightParen )
SemiColon ;
Int int
Id r6
Assign =
Id J1_01
Dot .
Id m1
LeftParen (
DecimalInteger 100
RightParen )
SemiColon ;
Int int
Id r
Assign =
DecimalInteger 0
SemiColon ;
If if
LeftParen (
Id r1
Equal ==
DecimalInteger 9
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id r2
Equal ==
DecimalInteger 6
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id r3
Equal ==
DecimalInteger 6
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id r4
Equal ==
DecimalInteger 6
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id r5
Equal ==
DecimalInteger 9
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id r6
Equal ==
DecimalInteger 6
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
Return return
DecimalInteger 117
Plus +
Id r
SemiColon ;
RightBrace }
Public public
Static static
Int int
Id m0
LeftParen (
Int int
Id a
RightParen )
LeftBrace {
Int int
Id r
Assign =
DecimalInteger 0
SemiColon ;
If if
LeftParen (
Id a
Equal ==
DecimalInteger 0
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id a
NotEqual !=
DecimalInteger 0
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 2
SemiColon ;
If if
LeftParen (
Exclamation !
LeftParen (
Id a
Equal ==
DecimalInteger 0
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 4
SemiColon ;
If if
LeftParen (
Exclamation !
LeftParen (
Id a
NotEqual !=
DecimalInteger 0
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 8
SemiColon ;
Return return
Id r
SemiColon ;
RightBrace }
Public public
Static static
Int int
Id m1
LeftParen (
Int int
Id a
RightParen )
LeftBrace {
Int int
Id r
Assign =
DecimalInteger 0
SemiColon ;
If if
LeftParen (
Id a
Equal ==
DecimalInteger 1
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id a
NotEqual !=
DecimalInteger 1
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 2
SemiColon ;
If if
LeftParen (
Exclamation !
LeftParen (
Id a
Equal ==
DecimalInteger 1
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 4
SemiColon ;
If if
LeftParen (
Exclamation !
LeftParen (
Id a
NotEqual !=
DecimalInteger 1
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 8
SemiColon ;
Return return
Id r
SemiColon ;
RightBrace }
RightBrace }
