EolCommentPrefix //
Id PARSER_WEEDER
EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id Floating
Id point
Id literals
Id not
Id allowed
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_Literals_Exponential
LeftBrace {
Public public
Id Je_1_Literals_Exponential
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Id Double
Id x
Assign =
New new
Id Double
LeftParen (
FloatingPoint 6.0221415e23
RightParen )
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
