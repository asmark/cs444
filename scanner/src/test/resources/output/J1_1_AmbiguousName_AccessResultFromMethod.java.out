EolCommentPrefix //
Id PARSER_WEEDER
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id This
Id method
Id is
Id supposed
Id to
Id test
Id whether
Id access
Id to
Id the
Id resulting
Multiply *
Id objects
Id of
Id method
Id calls
Id are
Id parsed
Id correctly
Dot .
Multiply *
TraditionalCommentPostfix */
Public public
Class class
Id J1_1_AmbiguousName_AccessResultFromMethod
LeftBrace {
Public public
Int int
Id i
SemiColon ;
Public public
Id J1_1_AmbiguousName_AccessResultFromMethod
LeftParen (
Int int
Id j
RightParen )
LeftBrace {
Id i
Assign =
Id j
SemiColon ;
RightBrace }
Public public
Id J1_1_AmbiguousName_AccessResultFromMethod
Id inc
LeftParen (
RightParen )
LeftBrace {
Return return
New new
Id J1_1_AmbiguousName_AccessResultFromMethod
LeftParen (
Id i
Plus +
DecimalInteger 1
RightParen )
SemiColon ;
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Return return
New new
Id J1_1_AmbiguousName_AccessResultFromMethod
LeftParen (
DecimalInteger 120
RightParen )
Dot .
Id inc
LeftParen (
RightParen )
Dot .
Id inc
LeftParen (
RightParen )
Dot .
Id inc
LeftParen (
RightParen )
Dot .
Id i
SemiColon ;
RightBrace }
RightBrace }
