EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id VOID_TYPE_NOT_RETURN_TYPE
Comma ,
Id VOID_TYPE_ARRAY
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id VOID_TYPE_NOT_RETURN_TYPE
Comma ,
Id VOID_TYPE_ARRAY
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id A
Id PType
Id node
Id which
Id is
Id not
Id the
Return return
Id type
Id of
Id a
Id method
Id must
Id not
Id be
Multiply *
Id an
Id AVoidType
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_VoidType_ArrayDeclaration
LeftBrace {
Public public
Id Je_1_VoidType_ArrayDeclaration
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Void void
LeftBracket [
RightBracket ]
Id a
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
