EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id SYNTAX_ERROR
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id SYNTAX_ERROR
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id Primary
Id expression
Id not
Id allowed
Id in
Id update
Id clause
Id of
For for
Id loop
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_For_PrimaryExpInUpdate
LeftBrace {
Public public
Id Je_1_For_PrimaryExpInUpdate
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
Id x
Assign =
DecimalInteger 0
SemiColon ;
For for
LeftParen (
Id x
Assign =
DecimalInteger 1
SemiColon ;
Id x
Less <
DecimalInteger 10
SemiColon ;
DecimalInteger 42
RightParen )
LeftBrace {
RightBrace }
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
