EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id JOOS1_THROW
EolCommentPrefix //
Id JOOS2
Colon :
Id REACHABILITY
Comma ,
Id UNREACHABLE_STATEMENT
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 1
RightParen )
Id Throw
Id statements
Id not
Id allowed
Multiply *
Id Reachability
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 2
RightParen )
Id Check
Id that
Id all
Id statements
LeftParen (
Id including
Id empty
Id statements
Multiply *
Id and
Id empty
Id blocks
RightParen )
Id are
Id reachable
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_17_Unreachable_AfterThrow
LeftBrace {
Public public
Id Je_17_Unreachable_AfterThrow
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Throw throw
New new
Id RuntimeException
LeftParen (
RightParen )
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
