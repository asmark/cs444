EolCommentPrefix //
Id PARSER_WEEDER
Comma ,
Id CODE_GENERATION
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Id Tests
Id the
Id precedence
Id relation
Id between
Id casts
Id and
InstanceOf instanceof
TraditionalCommentPostfix */
Public public
Class class
Id J1_1_Instanceof_OfCastExpression
LeftBrace {
Public public
Id J1_1_Instanceof_OfCastExpression
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Id J1_1_Instanceof_OfCastExpression
Id o
Assign =
New new
Id J1_1_Instanceof_OfCastExpression
LeftParen (
RightParen )
SemiColon ;
Boolean boolean
Id b
Assign =
LeftParen (
Id Object
RightParen )
Id o
InstanceOf instanceof
Id J1_1_Instanceof_OfCastExpression
SemiColon ;
If if
LeftParen (
Id b
RightParen )
LeftBrace {
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
Else else
LeftBrace {
Return return
Minus -
DecimalInteger 1
SemiColon ;
RightBrace }
RightBrace }
RightBrace }
