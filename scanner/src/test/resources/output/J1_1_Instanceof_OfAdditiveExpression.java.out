EolCommentPrefix //
Id PARSER_WEEDER
Comma ,
Id CODE_GENERATION
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id Tests
Id the
Id precedence
Id of
InstanceOf instanceof
TraditionalCommentPostfix */
Public public
Class class
Id J1_1_Instanceof_OfAdditiveExpression
LeftBrace {
Public public
Id J1_1_Instanceof_OfAdditiveExpression
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Id String
Id a
Assign =
String "123"
SemiColon ;
Boolean boolean
Id b
Assign =
Id a
Plus +
DecimalInteger 3
InstanceOf instanceof
Id String
SemiColon ;
If if
LeftParen (
Id b
RightParen )
LeftBrace {
Return return
Id Integer
Dot .
Id parseInt
LeftParen (
Id a
RightParen )
SemiColon ;
RightBrace }
Else else
LeftBrace {
Return return
Minus -
DecimalInteger 1
SemiColon ;
RightBrace }
RightBrace }
RightBrace }
