EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id JOOS1_THIS_CALL
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id TYPE_CHECKING
Comma ,
Id ILLEGAL_THROWS
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 1
RightParen )
Id No
Id explicit
Super super
Id or
This this
Id statements
Id allowed
Dot .
Multiply *
Id Typecheck
Colon :
Multiply *
Minus -
Id For
Id every
Id method
Id invocation
Id expression
Comma ,
Class class
Id instance
Id creation
Multiply *
Id expression
Comma ,
Id implicit
Id or
Id explicit
Super super
Id constructor
Id invocation
Multiply *
Id statement
Id or
Id explicit
This this
Id constructor
Id invocation
Id statement
Id in
Id the
Multiply *
Id program
Comma ,
Id check
Id that
For for
Id every
Id checked
Id exception
Id E2
Id declared
Id in
Id the
Multiply *
Throws throws
Id clause
Id of
Id the
Id invoked
Id method
Id or
Id constructor
Comma ,
Id the
Id current
Multiply *
Id method
Id or
Id constructor
Id declares
Id an
Id exception
Id E1
Id in
Id its
Throws throws
Id clause
Multiply *
Id such
Id that
Id E2
Id is
Id a
Id subclass
Id of
Id E1
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_16_Throws_This
LeftBrace {
Public public
Id Je_16_Throws_This
LeftParen (
Int int
Id i
RightParen )
Throws throws
Id CloneNotSupportedException
LeftBrace {
RightBrace }
Public public
Id Je_16_Throws_This
LeftParen (
RightParen )
LeftBrace {
This this
LeftParen (
DecimalInteger 100
RightParen )
SemiColon ;
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
