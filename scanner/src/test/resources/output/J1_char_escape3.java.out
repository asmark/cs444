EolCommentPrefix //
Id PARSER_WEEDER
Public public
Class class
Id J1_char_escape3
LeftBrace {
Public public
Id J1_char_escape3
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
Id r
Assign =
DecimalInteger 0
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\\123"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "123"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\\12"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "12"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\\1"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "1"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\134123"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "123"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\13412"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "12"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
If if
LeftParen (
Id J1_char_escape3
Dot .
Id eq
LeftParen (
String "\1341"
Comma ,
LeftParen (
LeftParen (
Char char
RightParen )
DecimalInteger 92
Plus +
String "1"
RightParen )
RightParen )
RightParen )
Id r
Assign =
Id r
Plus +
DecimalInteger 1
SemiColon ;
Return return
Id r
Plus +
DecimalInteger 117
SemiColon ;
RightBrace }
Public public
Static static
Boolean boolean
Id eq
LeftParen (
Id String
Id a
Comma ,
Id String
Id b
RightParen )
LeftBrace {
Return return
Id a
Dot .
Id equals
LeftParen (
LeftParen (
Id Object
RightParen )
Id b
RightParen )
SemiColon ;
RightBrace }
RightBrace }
