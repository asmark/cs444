EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
Id Expression
Id sequencing
Id not
Id allowed
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_NonJoosConstructs_ExpressionSequence
LeftBrace {
Public public
Id Je_1_NonJoosConstructs_ExpressionSequence
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
Id i
Assign =
DecimalInteger 0
SemiColon ;
Int int
Id j
Assign =
LeftParen (
Id i
Assign =
Id i
Plus +
DecimalInteger 1
Comma ,
Id i
RightParen )
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
