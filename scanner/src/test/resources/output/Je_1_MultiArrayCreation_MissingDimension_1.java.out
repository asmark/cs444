EolCommentPrefix //
Id JOOS1
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id JOOS1_MULTI_ARRAY
EolCommentPrefix //
Id JOOS2
Colon :
Id PARSER_WEEDER
Comma ,
Id PARSER_EXCEPTION
Comma ,
Id SYNTAX_ERROR
EolCommentPrefix //
Id JAVAC
Colon :
Id UNKNOWN
EolCommentPrefix //
TraditionalCommentPrefix /*
Multiply *
Multiply *
Id Parser
Divide /
Id weeder
Colon :
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 1
RightParen )
Id No
Id multidimensional
Id array
Id creation
Id expressions
Id allowed
Dot .
Multiply *
Minus -
LeftParen (
Id Joos
DecimalInteger 2
RightParen )
Id Missing
Id dimensions
Id in
Id multiple
Id array
Id creation
Multiply *
Id expressions
Id are
Id only
Id allowed
Id from
Id the
Id right
Id end
Id of
Id the
Multiply *
Id dimension
Id sequence
Dot .
TraditionalCommentPostfix */
Public public
Class class
Id Je_1_MultiArrayCreation_MissingDimension_1
LeftBrace {
Public public
Id Je_1_MultiArrayCreation_MissingDimension_1
LeftParen (
RightParen )
LeftBrace {
RightBrace }
Public public
Static static
Int int
Id test
LeftParen (
RightParen )
LeftBrace {
Int int
LeftBracket [
RightBracket ]
LeftBracket [
RightBracket ]
Id a
Assign =
New new
Int int
LeftBracket [
RightBracket ]
LeftBracket [
DecimalInteger 2
RightBracket ]
SemiColon ;
Return return
DecimalInteger 123
SemiColon ;
RightBrace }
RightBrace }
