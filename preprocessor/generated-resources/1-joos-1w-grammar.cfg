66
bof
eof
CharacterLiteral
StringLiteral
NullLiteral
DecimalIntLiteral
True
False
boolean
byte
short
int
char
[
]
Identifier
.
package
;
import
*
public
protected
static
abstract
final
native
class
extends
implements
,
{
}
=
void
(
)
interface
PreIncrementExpression
PreDecrementExpression
PostIncrementExpression
PostDecrementExpression
if
else
while
for
return
this
new
-
!
/
%
+
<
>
<=
>=
instanceof
==
!=
&
^
|
&&
||
103
Goal
Literal
IntegerLiteral
BooleanLiteral
Type
PrimitiveType
NumericType
IntegralType
ReferenceType
ClassOrInterfaceType
ClassType
InterfaceType
ArrayType
Name
SimpleName
QualifiedName
CompilationUnit
ImportDeclarations
PackageDeclaration
ImportDeclaration
SingleTypeImportDeclaration
TypeImportOnDemandDeclaration
TypeDeclaration
Modifiers
Modifier
ClassDeclaration
SuperClause
Interfaces
InterfaceTypeList
ClassBody
ClassBodyDeclarations
ClassBodyDeclaration
ClassMemberDeclaration
FieldDeclaration
VariableDeclarator
VariableDeclaratorId
VariableInitializer
MethodDeclaration
MethodHeader
MethodDeclarator
FormalParameterList
FormalParameter
ClassTypeList
MethodBody
ConstructorDeclaration
ConstructorDeclarator
ConstructorBody
InterfaceDeclaration
ExtendsInterfaces
InterfaceBody
InterfaceMemberDeclarations
AbstractMethodDeclaration
VariableInitializers
Block
BlockStatements
BlockStatement
LocalVariableDeclarationStatement
LocalVariableDeclaration
Statement
StatementNoShortIf
StatementWithoutTrailingSubstatement
EmptyStatement
ExpressionStatement
StatementExpression
IfThenStatement
IfThenElseStatement
IfThenElseStatementNoShortIf
WhileStatement
WhileStatementNoShortIf
ForStatement
ForStatementNoShortIf
ForInit
ForUpdate
ReturnStatement
Primary
PrimaryNoNewArray
ClassInstanceCreationExpression
ArgumentList
ArrayCreationExpression
DimExpr
Dims
FieldAccess
MethodInvocation
ArrayAccess
PostfixExpression
UnaryExpression
UnaryExpressionNotPlusMinus
CastExpression
MultiplicativeExpression
AdditiveExpression
RelationalExpression
EqualityExpression
AndExpression
ExclusiveOrExpression
InclusiveOrExpression
ConditionalAndExpression
ConditionalOrExpression
ConditionalExpression
AssignmentExpression
Assignment
LeftHandSide
Expression
ConstantExpression
Goal
231
Goal bof CompilationUnit eof
Literal IntegerLiteral
Literal BooleanLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal NullLiteral
IntegerLiteral DecimalIntLiteral
BooleanLiteral True
BooleanLiteral False
Type PrimitiveType
Type ReferenceType
PrimitiveType NumericType
PrimitiveType boolean
NumericType IntegralType
IntegralType byte
IntegralType short
IntegralType int
IntegralType char
ReferenceType ClassOrInterfaceType
ReferenceType ArrayType
ClassOrInterfaceType Name
ClassType ClassOrInterfaceType
InterfaceType ClassOrInterfaceType
ArrayType PrimitiveType [ ]
ArrayType Name [ ]
Name SimpleName
Name QualifiedName
SimpleName Identifier
QualifiedName Name . Identifier
CompilationUnit
CompilationUnit TypeDeclaration
CompilationUnit ImportDeclarations
CompilationUnit ImportDeclarations TypeDeclaration
CompilationUnit PackageDeclaration
CompilationUnit PackageDeclaration TypeDeclaration
CompilationUnit PackageDeclaration ImportDeclarations
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclaration
ImportDeclarations ImportDeclaration
ImportDeclarations ImportDeclarations ImportDeclaration
PackageDeclaration package Name ;
ImportDeclaration SingleTypeImportDeclaration
ImportDeclaration TypeImportOnDemandDeclaration
SingleTypeImportDeclaration import Name ;
TypeImportOnDemandDeclaration import Name . * ;
TypeDeclaration ClassDeclaration
TypeDeclaration InterfaceDeclaration
TypeDeclaration ;
Modifiers Modifier
Modifiers Modifiers Modifier
Modifier public
Modifier protected
Modifier static
Modifier abstract
Modifier final
Modifier native
ClassDeclaration Modifiers class Identifier ClassBody
ClassDeclaration Modifiers class Identifier Interfaces ClassBody
ClassDeclaration Modifiers class Identifier SuperClause ClassBody
ClassDeclaration Modifiers class Identifier SuperClause Interfaces ClassBody
SuperClause extends ClassType
Interfaces implements InterfaceTypeList
InterfaceTypeList InterfaceType
InterfaceTypeList InterfaceTypeList , InterfaceType
ClassBody { }
ClassBody { ClassBodyDeclarations }
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ClassMemberDeclaration
ClassBodyDeclaration ConstructorDeclaration
ClassMemberDeclaration FieldDeclaration
ClassMemberDeclaration MethodDeclaration
FieldDeclaration Modifiers Type VariableDeclarator ;
VariableDeclarator VariableDeclaratorId
VariableDeclarator VariableDeclaratorId = VariableInitializer
VariableDeclaratorId Identifier
VariableInitializer Expression
MethodDeclaration MethodHeader MethodBody
MethodHeader Modifiers Type MethodDeclarator
MethodHeader Modifiers void MethodDeclarator
MethodDeclarator Identifier ( )
MethodDeclarator Identifier ( FormalParameterList )
FormalParameterList FormalParameter
FormalParameterList FormalParameterList , FormalParameter
FormalParameter Type VariableDeclaratorId
ClassTypeList ClassType
ClassTypeList ClassTypeList , ClassType
MethodBody Block
MethodBody ;
ConstructorDeclaration Modifiers ConstructorDeclarator ConstructorBody
ConstructorDeclarator SimpleName ( )
ConstructorDeclarator SimpleName ( FormalParameterList )
ConstructorBody { }
ConstructorBody { BlockStatements }
InterfaceDeclaration Modifiers interface Identifier InterfaceBody
InterfaceDeclaration Modifiers interface Identifier ExtendsInterfaces InterfaceBody
ExtendsInterfaces extends InterfaceType
ExtendsInterfaces ExtendsInterfaces , InterfaceType
InterfaceBody { }
InterfaceBody { InterfaceMemberDeclarations }
InterfaceMemberDeclarations AbstractMethodDeclaration
InterfaceMemberDeclarations InterfaceMemberDeclarations AbstractMethodDeclaration
AbstractMethodDeclaration MethodHeader ;
VariableInitializers VariableInitializer
VariableInitializers VariableInitializers , VariableInitializer
Block { }
Block { BlockStatements }
BlockStatements BlockStatement
BlockStatements BlockStatements BlockStatement
BlockStatement LocalVariableDeclarationStatement
BlockStatement Statement
LocalVariableDeclarationStatement LocalVariableDeclaration ;
LocalVariableDeclaration Type VariableDeclarator
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ExpressionStatement
StatementWithoutTrailingSubstatement ReturnStatement
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
StatementExpression PreIncrementExpression
StatementExpression PreDecrementExpression
StatementExpression PostIncrementExpression
StatementExpression PostDecrementExpression
StatementExpression MethodInvocation
StatementExpression ClassInstanceCreationExpression
IfThenStatement if ( Expression ) Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatement for ( ; ; ) Statement
ForStatement for ( ; ; ForUpdate ) Statement
ForStatement for ( ; Expression ; ) Statement
ForStatement for ( ; Expression ; ForUpdate ) Statement
ForStatement for ( ForInit ; ; ) Statement
ForStatement for ( ForInit ; ; ForUpdate ) Statement
ForStatement for ( ForInit ; Expression ; ) Statement
ForStatement for ( ForInit ; Expression ; ForUpdate ) Statement
ForStatementNoShortIf for ( ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ; Expression ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; ; ForUpdate ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ; ) StatementNoShortIf
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
ForInit StatementExpression
ForInit LocalVariableDeclaration
ForUpdate StatementExpression
ReturnStatement return ;
ReturnStatement return Expression ;
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray MethodInvocation
PrimaryNoNewArray ArrayAccess
ClassInstanceCreationExpression new ClassType ( )
ClassInstanceCreationExpression new ClassType ( ArgumentList )
ArgumentList Expression
ArgumentList ArgumentList , Expression
ArrayCreationExpression new PrimitiveType DimExpr
ArrayCreationExpression new ClassOrInterfaceType DimExpr
DimExpr Dims
DimExpr [ Expression ]
Dims [ ]
FieldAccess Primary . Identifier
MethodInvocation Name ( )
MethodInvocation Name ( ArgumentList )
MethodInvocation Primary . Identifier ( )
MethodInvocation Primary . Identifier ( ArgumentList )
ArrayAccess Name [ Expression ]
ArrayAccess PrimaryNoNewArray [ Expression ]
PostfixExpression Primary
PostfixExpression Name
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotPlusMinus
UnaryExpressionNotPlusMinus PostfixExpression
UnaryExpressionNotPlusMinus ! UnaryExpression
UnaryExpressionNotPlusMinus CastExpression
CastExpression ( PrimitiveType ) UnaryExpression
CastExpression ( PrimitiveType Dims ) UnaryExpression
CastExpression ( Expression ) UnaryExpressionNotPlusMinus
CastExpression ( Name Dims ) UnaryExpressionNotPlusMinus
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression * UnaryExpression
MultiplicativeExpression MultiplicativeExpression / UnaryExpression
MultiplicativeExpression MultiplicativeExpression % UnaryExpression
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression
RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression < AdditiveExpression
RelationalExpression RelationalExpression > AdditiveExpression
RelationalExpression RelationalExpression <= AdditiveExpression
RelationalExpression RelationalExpression >= AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression
ExclusiveOrExpression AndExpression
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression
InclusiveOrExpression ExclusiveOrExpression
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
ConditionalExpression ConditionalOrExpression
AssignmentExpression ConditionalExpression
AssignmentExpression Assignment
Assignment LeftHandSide = AssignmentExpression
LeftHandSide Name
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
Expression AssignmentExpression
ConstantExpression Expression
